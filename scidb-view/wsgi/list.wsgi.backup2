#!/usr/bin/python

import os
import json
import sys
import time
import subprocess      
import Image
import StringIO
import urlparse
import datetime

#sys.path.append('/var/www/wsgi')
#import scidb2
sys.path.append('/opt/scidb/12.10/lib')  # or location appropriate to your installed version
#import scidbapi as scidb
#import pprint 

def application(environ, start_response):
    
    status = '200 OK'
    output = 'Hello World!'
    #names = scidb2.queryList()
    #content = {"names": names}
    start_response('200 OK', [('Content-Type', 'image/json')])
    proc = subprocess.Popen("/opt/scidb/12.10/bin/iquery -aq \"list('arrays')\" -o csv+",shell=True, stdout=subprocess.PIPE)
    out,err = proc.communicate()
    lines = out.split("\n")
    # first line is header, last line is empty
    header = lines[0].split(",")
    rows = [line.split(",") for line in lines[1:-1]]
    names = [row[1].translate(None, "\"") for row in rows]
    content = {"names" : names}
    return [json.dumps(content)]

    #print >> environ['wsgi.errors'], "application debug #1"

    #response_headers = [('Content-type', 'text/plain'),
    #                    ('Content-Length', str(len(output)))]
    #start_response(status, response_headers)

    #print >> environ['wsgi.errors'], "application debug #2"
    #db = scidb.connect("localhost", 1239)                     # connect to the SciDB coordinator.
    #result = db.executeQuery("list('arrays')", 'afl') # execute an AQL query
    #iquery -aq "list(arrays);"

    #return [str(result.size())]
    #return "teststring"
    #f = open('/var/log/list_log.txt','w+')
    #f.write('time: ' + str(datetime.datetime.now()))
    #try:
    #    f.write("I am trying dude")
    #    names = scidb2.queryList()
    ##except:
    #    f.write("function exception")
    #names = ['image', 'scidbLoadCsv_load_2964', 'scidbLoadCsv_load_3011', 'scidbLoadCsv_load_3076', 'scidbLoadCsv_load_3195', 'scidbLoadCsv_load_3243', 'scidbLoadCsv_load_3386', 'scidbLoadCsv_load_3449', 'scidbLoadCsv_load_3492', 'scidbLoadCsv_load_3846', 'scidbLoadCsv_load_3916', 'scidbLoadCsv_load_3957', 'scidbLoadCsv_load_4003']
    #iquery -aq "list('arrays');" -o json
    #content = {"names": names}
    #start_response('200 OK', [('Content-Type', 'image/json')])
    
    #f.write('\n')
    #f.write(json.dumps({"names" : names}))

    #path = os.path.dirname(scidb2.__file__)
    #f.write("\npath: " + str(path))

    #return [str(out)]
    #return [json.dumps({"names" : str(out)})]

if __name__ == "__main__":
    #status = '200 OK'
    #output = 'Hello World!'
    #names = scidb2.queryList()
    #content = {"names": names}
    #start_response('200 OK', [('Content-Type', 'image/json')])
    try:
        proc = subprocess.Popen("/opt/scidb/12.10/bin/iquery -aq \"list('arrays')\"",shell=True, stdout=subprocess.PIPE)
    except:
        proc = subprocess.Popen("whoami",shell=True,stdout=subprocess.PIPE)
    out,err = proc.communicate()


    sys.stdout.write(str(out))
    pass   
    
#if __name__ == "__main__":
#    sys.stdout.write("started\n")
#    f = open('/var/log/list_log.txt','w')
#
#    sys.stdout.write("querying list\n")
#    try:
#        names = scidb2.queryList()
#    except:
#        f.write("carrots")
#    f.write(json.dumps({"names" : names}))

#    path = os.path.dirname(scidb2.__file__)
#    f.write("\npath: " + str(path))

#    sys.stdout.write("printing list\n")
#    print names

 #   sys.stdout.write("finished\n")
